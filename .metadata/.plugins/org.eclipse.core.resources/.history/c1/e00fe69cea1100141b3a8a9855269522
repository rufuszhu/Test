package digital.dispatch.TaxiLimoNewUI;

import java.util.Locale;

import digital.dispatch.TaxiLimoNewUI.drawers.PaymentActivity;
import digital.dispatch.TaxiLimoNewUI.drawers.PreferenceActivity;
import digital.dispatch.TaxiLimoNewUI.drawers.ProfileActivity;

import android.app.Activity;
import android.support.v7.app.ActionBar.Tab;
import android.support.v7.app.ActionBar.TabListener;
import android.support.v7.app.ActionBarActivity;
import android.support.v7.app.ActionBar;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.app.FragmentTabHost;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.content.Context;
import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.util.Log;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.support.v4.widget.DrawerLayout;
import android.widget.ArrayAdapter;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends ActionBarActivity implements NavigationDrawerFragment.NavigationDrawerCallbacks {

	/**
	 * Fragment managing the behaviors, interactions and presentation of the navigation drawer.
	 */
	private NavigationDrawerFragment mNavigationDrawerFragment;
	// Declare Tab Variable
	private FragmentTabHost mTabHost;
	private final String BOOK_TAB = "book";
	private final String TRACK_TAB = "track";
	private final String HISTORY_TAB = "history";
	/**
	 * Used to store the last screen title. For use in {@link #restoreActionBar()}.
	 */
	private CharSequence mTitle;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		mNavigationDrawerFragment = (NavigationDrawerFragment) getSupportFragmentManager().findFragmentById(R.id.navigation_drawer);
		mTitle = getTitle();

		// Set up the drawer.
		mNavigationDrawerFragment.setUp(R.id.navigation_drawer, (DrawerLayout) findViewById(R.id.drawer_layout));
		
		//Set up tabs
        mTabHost = (FragmentTabHost)findViewById(android.R.id.tabhost);
        mTabHost.setup(this, getSupportFragmentManager(), R.id.realtabcontent);

        mTabHost.addTab(mTabHost.newTabSpec(BOOK_TAB).setIndicator(getString(R.string.book)),
            BookFragment.class, null);
        mTabHost.addTab(mTabHost.newTabSpec(TRACK_TAB).setIndicator(getString(R.string.track)),
            TrackFragment.class, null);
        mTabHost.addTab(mTabHost.newTabSpec(HISTORY_TAB).setIndicator(getString(R.string.history)),
            HistoryFragment.class, null);
        
        mTabHost.setOnTabChangedListener(new FragmentTabHost.OnTabChangeListener(){
        	@Override
        	public void onTabChanged(String tabId) {
        	    restoreActionBar();
        	}});
        restoreActionBar();
	}

	@Override
	public void onNavigationDrawerItemSelected(int position) {
		// update the main content by replacing fragments
		//FragmentManager fragmentManager = getSupportFragmentManager();
		
		switch (position) {
		case 0:
            //fragmentManager.beginTransaction().replace(R.id.container, HomeFragment.newInstance()).commit();
			Intent intent = new Intent(this, ProfileActivity.class);
			startActivity(intent);
            break;
		case 1:
			//fragmentManager.beginTransaction().replace(R.id.container, ProfileFragment.newInstance()).commit();
			Intent payintent = new Intent(this, PaymentActivity.class);
			startActivity(payintent);
			break;
		case 2:
			//fragmentManager.beginTransaction().replace(R.id.container, PaymentFragment.newInstance()).commit();
			Intent preintent = new Intent(this, PreferenceActivity.class);
			startActivity(preintent);
			break;
		}
	}

//	public void onSectionAttached(int number) {
//		switch (number) {
//		case 1:
//			mTitle = getString(R.string.book_title);
//			break;
//		case 2:
//			mTitle = getString(R.string.track_title);
//			break;
//		case 3:
//			mTitle = getString(R.string.history_title);
//			break;
//		}
//	}

	public void restoreActionBar() {
		ActionBar actionBar = getSupportActionBar();
		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);
		actionBar.setDisplayShowTitleEnabled(true);
		switch (mTabHost.getCurrentTab()) {
		case 0:
			mTitle = getString(R.string.book_title);
			break;
		case 1:
			mTitle = getString(R.string.track_title);
			break;
		case 2:
			mTitle = getString(R.string.history_title);
			break;
		}
		
		
		actionBar.setTitle(mTitle);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		if (!mNavigationDrawerFragment.isDrawerOpen()) {
			// Only show items in the action bar relevant to this screen
			// if the drawer is not showing. Otherwise, let the drawer
			// decide what to show in the action bar.
			
			if (mTabHost.getCurrentTab() == 1) {
				getMenuInflater().inflate(R.menu.track, menu); //  menu for.
	        } 
	        else{
	        	getMenuInflater().inflate(R.menu.main, menu);
	        }
			
			restoreActionBar();
			return true;
		}
		return super.onCreateOptionsMenu(menu);
	}
	
	@Override
	 public boolean onPrepareOptionsMenu(Menu menu) {
	        MenuInflater inflater = getMenuInflater();
	        int currentTab = mTabHost.getCurrentTab();
	        
	        Log.i("aa", "idididididid: "+ currentTab+"");
	        menu.clear();
	        if (currentTab == 1) {
	        	inflater.inflate(R.menu.track, menu); //  menu for.
	        } 
	        else{
	        	inflater.inflate(R.menu.main, menu);
	        }
	        return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		
		if (id == R.id.action_refresh) {
            Toast.makeText(this, "Refreshingasdfasf", Toast.LENGTH_SHORT).show();
            return true;
        }
		
		return super.onOptionsItemSelected(item);
	}

}
