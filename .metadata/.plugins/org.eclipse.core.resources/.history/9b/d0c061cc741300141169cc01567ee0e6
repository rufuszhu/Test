package digital.dispatch.TaxiLimoNewUI;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.FragmentTabHost;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarActivity;
import android.view.Menu;
import digital.dispatch.TaxiLimoNewUI.Adapters.NavigationAdapter;
import digital.dispatch.TaxiLimoNewUI.Adapters.NavigationItemAdapter;
import digital.dispatch.TaxiLimoNewUI.Drawers.PaymentActivity;
import digital.dispatch.TaxiLimoNewUI.Drawers.PreferenceActivity;
import digital.dispatch.TaxiLimoNewUI.Drawers.ProfileActivity;

public class MainActivity extends ActionBarActivity implements NavigationDrawerFragment.NavigationDrawerCallbacks {

	/**
	 * Fragment managing the behaviors, interactions and presentation of the navigation drawer.
	 */
	private NavigationDrawerFragment mNavigationDrawerFragment;
	private NavigationAdapter navigationAdapter;
	// Declare Tab Variable
	private FragmentTabHost mTabHost;
	private final String BOOK_TAB = "book";
	private final String TRACK_TAB = "track";
	private final String HISTORY_TAB = "history";
	private static int currentTab=0;
	/**
	 * Used to store the last screen title. For use in {@link #restoreActionBar()}.
	 */
	private CharSequence mTitle;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		mNavigationDrawerFragment = (NavigationDrawerFragment) getSupportFragmentManager().findFragmentById(R.id.navigation_drawer);
		mTitle = getTitle();

		// Set up the drawer.
		mNavigationDrawerFragment.setUp(R.id.navigation_drawer, (DrawerLayout) findViewById(R.id.drawer_layout));
		
		navigationAdapter = NavigationList.getNavigationAdapter(this);
		
		//Set up tabs
        mTabHost = (FragmentTabHost)findViewById(android.R.id.tabhost);
        mTabHost.setup(this, getSupportFragmentManager(), R.id.realtabcontent);

        mTabHost.addTab(mTabHost.newTabSpec(BOOK_TAB).setIndicator(getString(R.string.book)),
            BookFragment.class, null);
        mTabHost.addTab(mTabHost.newTabSpec(TRACK_TAB).setIndicator(getString(R.string.track)),
            TrackFragment.class, null);
        mTabHost.addTab(mTabHost.newTabSpec(HISTORY_TAB).setIndicator(getString(R.string.history)),
            HistoryFragment.class, null);
        mTabHost.setCurrentTab(currentTab);
        mTabHost.setOnTabChangedListener(new FragmentTabHost.OnTabChangeListener(){
        	@Override
        	public void onTabChanged(String tabId) {
        	    restoreActionBar();
        	}});
        
        restoreActionBar();
	}

	@Override
	public void onNavigationDrawerItemSelected(int position) {
		Intent intent;
		switch (position) {
		case 0:
			intent = new Intent(this, ProfileActivity.class);
			startActivity(intent);
            break;
		case 1:
			intent = new Intent(this, PaymentActivity.class);
			startActivity(intent);
			break;
		case 2:
			intent = new Intent(this, PreferenceActivity.class);
			startActivity(intent);
			break;
		case 3:
			intent = new Intent(this, AboutActivity.class);
			startActivity(intent);
			break;
		}
	}

//	public void onSectionAttached(int number) {
//		switch (number) {
//		case 1:
//			mTitle = getString(R.string.book_title);
//			break;
//		case 2:
//			mTitle = getString(R.string.track_title);
//			break;
//		case 3:
//			mTitle = getString(R.string.history_title);
//			break;
//		}
//	}

	public void restoreActionBar() {
		ActionBar actionBar = getSupportActionBar();
//		actionBar.setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM | ActionBar.DISPLAY_SHOW_HOME | ActionBar.DISPLAY_HOME_AS_UP); 
//		actionBar.setCustomView(R.layout.actionbar);
		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);
//		actionBar.setDisplayUseLogoEnabled(false);
		actionBar.setDisplayShowTitleEnabled(true);
//		actionBar.setIcon(R.color.transparent);
//		actionBar.setIcon(null);
		switch (mTabHost.getCurrentTab()) {
		case 0:
			currentTab=0;
			mTitle = getString(R.string.book_title);
			break;
		case 1:
			currentTab=1;
			mTitle = getString(R.string.track_title);
			break;
		case 2:
			currentTab=2;
			mTitle = getString(R.string.history_title);
			break;
		}
		
//		TextView tv = (TextView) findViewById(R.id.actionbar_title);
//		tv.setText(mTitle);
		actionBar.setTitle(mTitle);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		if (!mNavigationDrawerFragment.isDrawerOpen()) {
			// Only show items in the action bar relevant to this screen
			// if the drawer is not showing. Otherwise, let the drawer
			// decide what to show in the action bar.
			
	        getMenuInflater().inflate(R.menu.main, menu);
			restoreActionBar();
			return true;
		}
		return super.onCreateOptionsMenu(menu);
	}
	
	public NavigationDrawerFragment getDrawerFragment(){
		return mNavigationDrawerFragment;
	}

//	@Override
//	public boolean onOptionsItemSelected(MenuItem item) {
//		// Handle action bar item clicks here. The action bar will
//		// automatically handle clicks on the Home/Up button, so long
//		// as you specify a parent activity in AndroidManifest.xml.
//		int id = item.getItemId();
//		
//		if (id == R.id.action_refresh) {
//            Toast.makeText(this, "Refreshingasdfasf", Toast.LENGTH_SHORT).show();
//            return true;
//        }
//		
//		return super.onOptionsItemSelected(item);
//	}

}
